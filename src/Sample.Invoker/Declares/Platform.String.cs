using System;
using System.Runtime.InteropServices;

namespace Sample.Invoker.Declares
{
    /// <summary>
    /// 平台声明 - 常量
    /// </summary>
    public static partial class Platform
    {
        #region # 发送string —— static extern void SendString(string text)
        /// <summary>
        /// 发送string
        /// </summary>
        [DllImport(DllName, CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Ansi, EntryPoint = "sendString")]
        public static extern void SendString([MarshalAs(UnmanagedType.LPStr)] string text);
        #endregion

        #region # 接收string —— static partial string ReceiveString()
        /// <summary>
        /// 接收string
        /// </summary>
        [LibraryImport(DllName, StringMarshalling = StringMarshalling.Utf8, EntryPoint = "receiveString")]
        public static partial string ReceiveString();
        #endregion

        #region # 接收string —— static extern IntPtr ReceiveStringViaPtr()
        /// <summary>
        /// 接收string
        /// </summary>
        [DllImport(DllName, CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Ansi, EntryPoint = "receiveString")]
        public static extern IntPtr ReceiveStringViaPtr();
        #endregion
    }
}


//// <auto-generated/>
//namespace Sample.Invoker.Declares
//{
//    public static unsafe partial class Platform
//    {
//        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "8.0.10.11423")]
//        [global::System.Runtime.CompilerServices.SkipLocalsInitAttribute]
//        public static partial string ReceiveString()
//        {
//            bool __invokeSucceeded = default;
//            string __retVal = default;
//            byte* __retVal_native = default;
//            try
//            {
//                {
//                    __retVal_native = __PInvoke();
//                }

//                __invokeSucceeded = true;
//                // Unmarshal - Convert native data to managed data.
//                __retVal = global::System.Runtime.InteropServices.Marshalling.Utf8StringMarshaller.ConvertToManaged(__retVal_native);
//            }
//            finally
//            {
//                if (__invokeSucceeded)
//                {
//                    // CleanupCalleeAllocated - Perform cleanup of callee allocated resources.
//                    global::System.Runtime.InteropServices.Marshalling.Utf8StringMarshaller.Free(__retVal_native);
//                }
//            }

//            return __retVal;
//            // Local P/Invoke
//            [global::System.Runtime.InteropServices.DllImportAttribute("Sample.NativeLibrary.dll", EntryPoint = "receiveString", ExactSpelling = true)]
//            static extern unsafe byte* __PInvoke();
//        }
//    }
//}
